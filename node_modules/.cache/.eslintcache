[{"/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/index.js":"1","/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/App.js":"2","/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/reportWebVitals.js":"3","/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/components/ToDoList/ToDoList.js":"4","/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/components/ToDoList/Todo.js":"5","/home/karolina/Desktop/ShoppingList/src/index.js":"6","/home/karolina/Desktop/ShoppingList/src/App.js":"7","/home/karolina/Desktop/ShoppingList/src/reportWebVitals.js":"8","/home/karolina/Desktop/ShoppingList/src/components/ToDoList/ToDoList.js":"9","/home/karolina/Desktop/ShoppingList/src/components/ToDoList/Todo.js":"10","/home/karolina/Desktop/ShoppingList/src/components/ToDoList/Number.js":"11"},{"size":500,"mtime":1616356108283,"results":"12","hashOfConfig":"13"},{"size":419,"mtime":1616359918213,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1616356108283,"results":"15","hashOfConfig":"13"},{"size":1688,"mtime":1616364142299,"results":"16","hashOfConfig":"13"},{"size":225,"mtime":1616364003944,"results":"17","hashOfConfig":"13"},{"size":500,"mtime":1616416164135,"results":"18","hashOfConfig":"19"},{"size":244,"mtime":1616514800978,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1616416164135,"results":"21","hashOfConfig":"19"},{"size":2521,"mtime":1616526754008,"results":"22","hashOfConfig":"19"},{"size":616,"mtime":1616527160054,"results":"23","hashOfConfig":"19"},{"size":450,"mtime":1616493485589,"results":"24","hashOfConfig":"19"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"q67anf",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"1xs0afh",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/index.js",[],"/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/App.js",[],"/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/reportWebVitals.js",[],"/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/components/ToDoList/ToDoList.js",[],"/home/karolina/Documents/Learning-Programming-Languages/ReactJS/todolist2/src/components/ToDoList/Todo.js",[],"/home/karolina/Desktop/ShoppingList/src/index.js",[],["49","50"],"/home/karolina/Desktop/ShoppingList/src/App.js",[],"/home/karolina/Desktop/ShoppingList/src/reportWebVitals.js",[],"/home/karolina/Desktop/ShoppingList/src/components/ToDoList/ToDoList.js",["51","52","53","54"],"import React, {useState} from 'react'\nimport Todo from './Todo'\n\nfunction ToDoList(props){\n    const [todoListState, setTodoListState] = useState( {todos: [\"apple\", \"banana\"], inputValue: \"\", error: \"\"})\n    const [counterItem, setCounterItem] = useState({item: \"\", counter: 1})\n\n    const handleInputChange=(event)=>{\n        const {value} = event.target\n        setTodoListState({\n            ...todoListState,\n            inputValue: value\n        })\n    }\n\n    const handleButtonClick=()=>{\n        const {todos} = todoListState\n        const {counter, item} = counterItem\n\n        //blokada zeby nie wprowadzic pustego zadania\n        if (!inputValue) return\n\n        //jesli juz istnieje taki sam element jak teraz dodajemy\n        if (todos.some(todo=>todo===inputValue)){\n            setTodoListState({\n                ...todoListState,\n                error: \"Ten produkt jest już na liście\",\n                inputValue: \"\"\n            })\n\n            return;\n        }\n        setTodoListState({\n            todos: [...todos, inputValue],\n            inputValue: \"\",\n            error: \"\"\n        })\n    }\n\n    const handleToDoRemove=(toDoValue)=>{\n       setTodoListState({\n           ...todoListState,\n           todos: todos.filter(todo => todo!==toDoValue) //funkcja filter zwraca obiekt, ktory jest prawda dla danego warunku\n           //czyli my chcemy zeby zwrocila wszystkie obiektry poza tym przeslanym jako argument funkcji\n\n       })\n    }\n\n    const addCounter=()=>{\n        const {counter, item} = counterItem\n        setCounterItem({\n            ...counterItem,\n            counter: counter+1\n        })\n    }\n\n    const substractCounter=()=>{\n        const {counter, item} = counterItem\n        setCounterItem({\n            ...counterItem,\n            counter: counter-1\n        })\n    }\n\n    const {todos, inputValue, error} = todoListState;\n    return(\n        <div>\n            <input type=\"text\" name=\"item\" placeholder=\"add new item\" value={inputValue} onChange={handleInputChange}></input>\n            <button className=\"addButton\" onClick={handleButtonClick}>Add</button>\n\n            {!!error &&\n                    <p className=\"error\">{error}</p>\n            }\n            <h3>My list:</h3>\n            <div className=\"listItem\">\n                {todos.map((todo)=>(<Todo key={todo} todo={todo} onCloseClick={handleToDoRemove} counter={counterItem.counter} addClick={addCounter} substractClick={substractCounter}/>))}\n            </div>\n        </div>\n    )\n}\n\nexport default ToDoList","/home/karolina/Desktop/ShoppingList/src/components/ToDoList/Todo.js",[],"/home/karolina/Desktop/ShoppingList/src/components/ToDoList/Number.js",["55"],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":18,"column":16,"nodeType":"62","messageId":"63","endLine":18,"endColumn":23},{"ruleId":"60","severity":1,"message":"64","line":18,"column":25,"nodeType":"62","messageId":"63","endLine":18,"endColumn":29},{"ruleId":"60","severity":1,"message":"64","line":50,"column":25,"nodeType":"62","messageId":"63","endLine":50,"endColumn":29},{"ruleId":"60","severity":1,"message":"64","line":58,"column":25,"nodeType":"62","messageId":"63","endLine":58,"endColumn":29},{"ruleId":"65","severity":2,"message":"66","line":5,"column":5,"nodeType":"62","messageId":"67","endLine":5,"endColumn":14},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"no-unused-vars","'counter' is assigned a value but never used.","Identifier","unusedVar","'item' is assigned a value but never used.","no-undef","'setNumber' is not defined.","undef","no-global-assign","no-unsafe-negation"]