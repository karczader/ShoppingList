{"ast":null,"code":"var _jsxFileName = \"/home/karolina/Desktop/ShoppingList/src/components/ToDoList/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ToDoList(props) {\n  _s();\n\n  const [todoListState, setTodoListState] = useState({\n    todos: [\"apple\", \"banana\"],\n    inputValue: \"\",\n    error: \"\"\n  });\n  const [counterItem, setCounterItem] = useState({\n    item: \"\",\n    counter: 1\n  });\n\n  const handleInputChange = event => {\n    const {\n      value\n    } = event.target;\n    setTodoListState({ ...todoListState,\n      inputValue: value\n    });\n  };\n\n  const handleButtonClick = () => {\n    const {\n      todos\n    } = todoListState; //blokada zeby nie wprowadzic pustego zadania\n\n    if (!inputValue) return; //jesli juz istnieje taki sam element jak teraz dodajemy\n\n    if (todos.some(todo => todo === inputValue)) {\n      setTodoListState({ ...todoListState,\n        error: \"Ten produkt jest już na liście\",\n        inputValue: \"\"\n      });\n      return;\n    }\n\n    setTodoListState({\n      todos: [...todos, inputValue],\n      inputValue: \"\",\n      error: \"\"\n    });\n  };\n\n  const handleToDoRemove = toDoValue => {\n    setTodoListState({ ...todoListState,\n      todos: todos.filter(todo => todo !== toDoValue) //funkcja filter zwraca obiekt, ktory jest prawda dla danego warunku\n      //czyli my chcemy zeby zwrocila wszystkie obiektry poza tym przeslanym jako argument funkcji\n\n    });\n  };\n\n  const addCounter = () => {\n    setCounterItem({ ...counterItem,\n      counter: counter + 1\n    });\n  };\n\n  const substractClick = () => {\n    setTodoListState({ ...todoListState,\n      counter: counter - 1\n    });\n  };\n\n  const {\n    todos,\n    inputValue,\n    error,\n    counter\n  } = todoListState;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"item\",\n      placeholder: \"add new item\",\n      value: inputValue,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"addButton\",\n      onClick: handleButtonClick,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), !!error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My list:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"listItem\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        todo: todo,\n        onCloseClick: handleToDoRemove,\n        counter: counter,\n        addClick: addCounter,\n        substractClick: addCounter\n      }, todo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ToDoList, \"4AdGUQDQdm24ERaGRjAK74WKB8I=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/home/karolina/Desktop/ShoppingList/src/components/ToDoList/ToDoList.js"],"names":["React","useState","Todo","ToDoList","props","todoListState","setTodoListState","todos","inputValue","error","counterItem","setCounterItem","item","counter","handleInputChange","event","value","target","handleButtonClick","some","todo","handleToDoRemove","toDoValue","filter","addCounter","substractClick","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AAAA;;AACpB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,QAAQ,CAAE;AAACM,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,CAAR;AAA6BC,IAAAA,UAAU,EAAE,EAAzC;AAA6CC,IAAAA,KAAK,EAAE;AAApD,GAAF,CAAlD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC;AAACW,IAAAA,IAAI,EAAE,EAAP;AAAWC,IAAAA,OAAO,EAAE;AAApB,GAAD,CAA9C;;AAEA,QAAMC,iBAAiB,GAAEC,KAAD,IAAS;AAC7B,UAAM;AAACC,MAAAA;AAAD,QAAUD,KAAK,CAACE,MAAtB;AACAX,IAAAA,gBAAgB,CAAC,EACb,GAAGD,aADU;AAEbG,MAAAA,UAAU,EAAEQ;AAFC,KAAD,CAAhB;AAIH,GAND;;AAQA,QAAME,iBAAiB,GAAC,MAAI;AACxB,UAAM;AAACX,MAAAA;AAAD,QAAUF,aAAhB,CADwB,CAGxB;;AACA,QAAI,CAACG,UAAL,EAAiB,OAJO,CAMxB;;AACA,QAAID,KAAK,CAACY,IAAN,CAAWC,IAAI,IAAEA,IAAI,KAAGZ,UAAxB,CAAJ,EAAwC;AACpCF,MAAAA,gBAAgB,CAAC,EACb,GAAGD,aADU;AAEbI,QAAAA,KAAK,EAAE,gCAFM;AAGbD,QAAAA,UAAU,EAAE;AAHC,OAAD,CAAhB;AAMA;AACH;;AACDF,IAAAA,gBAAgB,CAAC;AACbC,MAAAA,KAAK,EAAE,CAAC,GAAGA,KAAJ,EAAWC,UAAX,CADM;AAEbA,MAAAA,UAAU,EAAE,EAFC;AAGbC,MAAAA,KAAK,EAAE;AAHM,KAAD,CAAhB;AAKH,GArBD;;AAuBA,QAAMY,gBAAgB,GAAEC,SAAD,IAAa;AACjChB,IAAAA,gBAAgB,CAAC,EACb,GAAGD,aADU;AAEbE,MAAAA,KAAK,EAAEA,KAAK,CAACgB,MAAN,CAAaH,IAAI,IAAIA,IAAI,KAAGE,SAA5B,CAFM,CAEiC;AAC9C;;AAHa,KAAD,CAAhB;AAMF,GAPD;;AASA,QAAME,UAAU,GAAC,MAAI;AACjBb,IAAAA,cAAc,CAAC,EACX,GAAGD,WADQ;AAEXG,MAAAA,OAAO,EAAEA,OAAO,GAAC;AAFN,KAAD,CAAd;AAIH,GALD;;AAOA,QAAMY,cAAc,GAAC,MAAI;AACrBnB,IAAAA,gBAAgB,CAAC,EACb,GAAGD,aADU;AAEbQ,MAAAA,OAAO,EAAEA,OAAO,GAAC;AAFJ,KAAD,CAAhB;AAIH,GALD;;AAOA,QAAM;AAACN,IAAAA,KAAD;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,KAApB;AAA2BI,IAAAA;AAA3B,MAAsCR,aAA5C;AACA,sBACI;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAA+B,MAAA,WAAW,EAAC,cAA3C;AAA0D,MAAA,KAAK,EAAEG,UAAjE;AAA6E,MAAA,QAAQ,EAAEM;AAAvF;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEI,iBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIK,CAAC,CAACT,KAAF,iBACO;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA,gBAAsBA;AAAtB;AAAA;AAAA;AAAA;AAAA,YALZ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKF,KAAK,CAACmB,GAAN,CAAWN,IAAD,iBAAS,QAAC,IAAD;AAAiB,QAAA,IAAI,EAAEA,IAAvB;AAA6B,QAAA,YAAY,EAAEC,gBAA3C;AAA6D,QAAA,OAAO,EAAER,OAAtE;AAA+E,QAAA,QAAQ,EAAEW,UAAzF;AAAqG,QAAA,cAAc,EAAEA;AAArH,SAAWJ,IAAX;AAAA;AAAA;AAAA;AAAA,cAAnB;AADL;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAzEQjB,Q;;KAAAA,Q;AA2ET,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\nimport Todo from './Todo'\n\nfunction ToDoList(props){\n    const [todoListState, setTodoListState] = useState( {todos: [\"apple\", \"banana\"], inputValue: \"\", error: \"\"})\n    const [counterItem, setCounterItem] = useState({item: \"\", counter: 1})\n\n    const handleInputChange=(event)=>{\n        const {value} = event.target\n        setTodoListState({\n            ...todoListState,\n            inputValue: value\n        })\n    }\n\n    const handleButtonClick=()=>{\n        const {todos} = todoListState\n\n        //blokada zeby nie wprowadzic pustego zadania\n        if (!inputValue) return\n\n        //jesli juz istnieje taki sam element jak teraz dodajemy\n        if (todos.some(todo=>todo===inputValue)){\n            setTodoListState({\n                ...todoListState,\n                error: \"Ten produkt jest już na liście\",\n                inputValue: \"\"\n            })\n\n            return;\n        }\n        setTodoListState({\n            todos: [...todos, inputValue],\n            inputValue: \"\",\n            error: \"\"\n        })\n    }\n\n    const handleToDoRemove=(toDoValue)=>{\n       setTodoListState({\n           ...todoListState,\n           todos: todos.filter(todo => todo!==toDoValue) //funkcja filter zwraca obiekt, ktory jest prawda dla danego warunku\n           //czyli my chcemy zeby zwrocila wszystkie obiektry poza tym przeslanym jako argument funkcji\n\n       })\n    }\n\n    const addCounter=()=>{\n        setCounterItem({\n            ...counterItem,\n            counter: counter+1\n        })\n    }\n\n    const substractClick=()=>{\n        setTodoListState({\n            ...todoListState,\n            counter: counter-1\n        })\n    }\n\n    const {todos, inputValue, error, counter} = todoListState;\n    return(\n        <div>\n            <input type=\"text\" name=\"item\" placeholder=\"add new item\" value={inputValue} onChange={handleInputChange}></input>\n            <button className=\"addButton\" onClick={handleButtonClick}>Add</button>\n\n            {!!error &&\n                    <p className=\"error\">{error}</p>\n            }\n            <h3>My list:</h3>\n            <div className=\"listItem\">\n                {todos.map((todo)=>(<Todo key={todo} todo={todo} onCloseClick={handleToDoRemove} counter={counter} addClick={addCounter} substractClick={addCounter}/>))}\n            </div>\n        </div>\n    )\n}\n\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}